function solution(a, b, n) {
  // 1. 빈 병이 a개 미만이면 더 이상 교환이 불가능하므로 0을 반환
  // n = 20, a = 3 이므로 거짓 => 0 반환
  if (n < a) {
    return 0;
  }

  // a의 갯수의 콜라를 (3)을 가져다주면 (1)만큼의 콜라를 받는다.
  // (20/a)*b = 6

  // 2. 현재 빈 병 n개로 받을 수 있는 콜라 계산
  const currentCola = Math.floor(n / a) * b; // = 6
  // 20/3 = 6
  // 20개 빈병을 3개씩 교환하면서 6개 콜라를 받을 수 있음

  // 3. 빈 병 n개로 받은 콜라를 마신 뒤 남은 빈 병 개수
  const remainingBottle = n % a; 
  // 20 % 3 = 2 (3으로 나눈 나머지)
  // 6병의 콜라를 마신 후 빈병이 6개 -> 6개의 빈병을 교환하여 2병의 콜라를 추가로 얻음

  // 4. 다음 교환 단계를 계산하여 더해줌
  return currentCola + solution(a, b, remainingBottle + currentCola);
  // 현재 받은 콜라의 양 + 재귀적으로 다음 교환 단계를 계산한 값을 더한 결과를 반환
  // 남은 빈병이 8개 이미 받은 콜라 6병을 마시면서 추가로 얻게되는 콜라 양

  // 최종적으로 얻을 수 있는 콜라의 양은
  // 6개 + 2개 + 1개 => 9개 

// 예시값
const a = 3;
const b = 1;
const n = 20;

console.log(solution(a, b, n)); // 출력: 9

// 문제 이해:
// 콜라 마트는 빈 병 a개를 가져다주면 b병의 콜라를 준다.
// 상빈이는 보유 중인 빈 병 n개를 교환하고 콜라를 받을 수 있다.
// 상빈이가 받을 수 있는 콜라 병의 수를 반환

// 풀이 순서:
// 현재 가지고 있는 빈 병 n을 가지고 몇 병의 콜라를 받을 수 있는지 계산
// 현재 받은 콜라를 마시고 남은 빈 병의 개수를 계산
// 이 과정을 반복
// 기저 조건을 설정하여 교환이 더 이상 불가능할 때 0을 반환합니다.

// Math.floor() 함수는 주어진 숫자와 같거나 작은 정수 중에서 가장 큰 수를 반환
